{"ast":null,"code":"// src/utils/openaiVisionFetch.js\nexport async function extractTableFromImageWithFetch(imageFile, apiKey) {\n  // 이미지를 base64로 변환\n  const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(',')[1]);\n    reader.onerror = error => reject(error);\n  });\n  const base64Image = await toBase64(imageFile);\n  const body = {\n    model: \"gpt-4-vision-preview\",\n    // 또는 최신 vision 모델명\n    messages: [{\n      role: \"user\",\n      content: [{\n        type: \"text\",\n        text: \"이 이미지의 표 내용을 마크다운 표로 추출해줘.\"\n      }, {\n        type: \"image_url\",\n        image_url: {\n          url: `data:image/jpeg;base64,${base64Image}`\n        }\n      }]\n    }],\n    max_tokens: 1024\n  };\n  const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${apiKey}`\n    },\n    body: JSON.stringify(body)\n  });\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(`OpenAI Vision API Error: ${error}`);\n  }\n  const data = await response.json();\n  return data.choices[0].message.content;\n}","map":{"version":3,"names":["extractTableFromImageWithFetch","imageFile","apiKey","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","base64Image","body","model","messages","role","content","type","text","image_url","url","max_tokens","response","fetch","method","headers","JSON","stringify","ok","Error","data","json","choices","message"],"sources":["C:/Users/atom2/mathocr/mathocr-app/src/utils/openaiVisionFetch.js"],"sourcesContent":["// src/utils/openaiVisionFetch.js\nexport async function extractTableFromImageWithFetch(imageFile, apiKey) {\n  // 이미지를 base64로 변환\n  const toBase64 = file =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result.split(',')[1]);\n      reader.onerror = error => reject(error);\n    });\n\n  const base64Image = await toBase64(imageFile);\n\n  const body = {\n    model: \"gpt-4-vision-preview\", // 또는 최신 vision 모델명\n    messages: [\n      {\n        role: \"user\",\n        content: [\n          { type: \"text\", text: \"이 이미지의 표 내용을 마크다운 표로 추출해줘.\" },\n          {\n            type: \"image_url\",\n            image_url: {\n              url: `data:image/jpeg;base64,${base64Image}`\n            }\n          }\n        ]\n      }\n    ],\n    max_tokens: 1024\n  };\n\n  const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${apiKey}`\n    },\n    body: JSON.stringify(body)\n  });\n\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(`OpenAI Vision API Error: ${error}`);\n  }\n\n  const data = await response.json();\n  return data.choices[0].message.content;\n}\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,8BAA8BA,CAACC,SAAS,EAAEC,MAAM,EAAE;EACtE;EACA,MAAMC,QAAQ,GAAGC,IAAI,IACnB,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC/B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,aAAa,CAACN,IAAI,CAAC;IAC1BI,MAAM,CAACG,MAAM,GAAG,MAAML,OAAO,CAACE,MAAM,CAACI,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1DL,MAAM,CAACM,OAAO,GAAGC,KAAK,IAAIR,MAAM,CAACQ,KAAK,CAAC;EACzC,CAAC,CAAC;EAEJ,MAAMC,WAAW,GAAG,MAAMb,QAAQ,CAACF,SAAS,CAAC;EAE7C,MAAMgB,IAAI,GAAG;IACXC,KAAK,EAAE,sBAAsB;IAAE;IAC/BC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAE;MAA6B,CAAC,EACpD;QACED,IAAI,EAAE,WAAW;QACjBE,SAAS,EAAE;UACTC,GAAG,EAAE,0BAA0BT,WAAW;QAC5C;MACF,CAAC;IAEL,CAAC,CACF;IACDU,UAAU,EAAE;EACd,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;IACzEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAU5B,MAAM;IACnC,CAAC;IACDe,IAAI,EAAEc,IAAI,CAACC,SAAS,CAACf,IAAI;EAC3B,CAAC,CAAC;EAEF,IAAI,CAACU,QAAQ,CAACM,EAAE,EAAE;IAChB,MAAMlB,KAAK,GAAG,MAAMY,QAAQ,CAACJ,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIW,KAAK,CAAC,4BAA4BnB,KAAK,EAAE,CAAC;EACtD;EAEA,MAAMoB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACjB,OAAO;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}