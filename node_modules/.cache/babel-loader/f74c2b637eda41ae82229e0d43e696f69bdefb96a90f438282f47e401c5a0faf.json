{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atom2\\\\mathocr\\\\mathocr-app\\\\src\\\\components\\\\PdfUploader.js\",\n  _s = $RefreshSig$();\n// src/components/PdfUploader.js\n// PDF 또는 JPG 파일 업로드 및 미리보기 컴포넌트\nimport React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfUploader({\n  onFileSelect\n}) {\n  _s();\n  // 업로드된 파일 상태\n  const [file, setFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n\n  // 파일 업로드 핸들러\n  const handleFileChange = event => {\n    const uploadedFile = event.target.files[0];\n    if (!uploadedFile) return;\n    // PDF 또는 JPG만 허용\n    if (uploadedFile.type === 'application/pdf' || uploadedFile.type === 'image/jpeg') {\n      setFile(uploadedFile);\n      onFileSelect(uploadedFile); // 부모 컴포넌트로 파일 전달\n    } else {\n      alert('PDF 또는 JPG 파일만 업로드 가능합니다.');\n    }\n  };\n\n  // PDF 로드 성공 시 페이지 수 저장\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '24px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#1976d2'\n      },\n      children: \"\\uBB38\\uC81C \\uD480\\uC774 \\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf,.jpg\",\n      onChange: handleFileChange,\n      style: {\n        marginBottom: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), file && file.type === 'application/pdf' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #eee',\n        borderRadius: 8,\n        padding: 8,\n        background: '#fafbfc'\n      },\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        file: file,\n        onLoadSuccess: onDocumentLoadSuccess,\n        children: Array.from(new Array(numPages), (el, idx) => /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: idx + 1\n        }, `page_${idx + 1}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), file && file.type === 'image/jpeg' && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: URL.createObjectURL(file),\n      alt: \"\\uC5C5\\uB85C\\uB4DC\\uB41C \\uC774\\uBBF8\\uC9C0 \\uBBF8\\uB9AC\\uBCF4\\uAE30\",\n      style: {\n        maxWidth: '100%',\n        marginTop: 16,\n        borderRadius: 8,\n        boxShadow: '0 2px 8px #eee'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfUploader, \"pXwC9i82Phbps8CJN5PR7KRm9Ic=\");\n_c = PdfUploader;\nexport default PdfUploader;\nvar _c;\n$RefreshReg$(_c, \"PdfUploader\");","map":{"version":3,"names":["React","useState","Document","Page","jsxDEV","_jsxDEV","PdfUploader","onFileSelect","_s","file","setFile","numPages","setNumPages","handleFileChange","event","uploadedFile","target","files","type","alert","onDocumentLoadSuccess","style","margin","children","color","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","marginBottom","border","borderRadius","padding","background","onLoadSuccess","Array","from","el","idx","pageNumber","src","URL","createObjectURL","alt","maxWidth","marginTop","boxShadow","_c","$RefreshReg$"],"sources":["C:/Users/atom2/mathocr/mathocr-app/src/components/PdfUploader.js"],"sourcesContent":["// src/components/PdfUploader.js\n// PDF 또는 JPG 파일 업로드 및 미리보기 컴포넌트\nimport React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\n\nfunction PdfUploader({ onFileSelect }) {\n  // 업로드된 파일 상태\n  const [file, setFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n\n  // 파일 업로드 핸들러\n  const handleFileChange = (event) => {\n    const uploadedFile = event.target.files[0];\n    if (!uploadedFile) return;\n    // PDF 또는 JPG만 허용\n    if (\n      uploadedFile.type === 'application/pdf' ||\n      uploadedFile.type === 'image/jpeg'\n    ) {\n      setFile(uploadedFile);\n      onFileSelect(uploadedFile); // 부모 컴포넌트로 파일 전달\n    } else {\n      alert('PDF 또는 JPG 파일만 업로드 가능합니다.');\n    }\n  };\n\n  // PDF 로드 성공 시 페이지 수 저장\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n  };\n\n  return (\n    <div style={{ margin: '24px 0' }}>\n      <h2 style={{ color: '#1976d2' }}>문제 풀이 파일 업로드</h2>\n      <input type=\"file\" accept=\".pdf,.jpg\" onChange={handleFileChange} style={{ marginBottom: 16 }} />\n      {file && file.type === 'application/pdf' && (\n        <div style={{ border: '1px solid #eee', borderRadius: 8, padding: 8, background: '#fafbfc' }}>\n          <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\n            {Array.from(new Array(numPages), (el, idx) => (\n              <Page key={`page_${idx + 1}`} pageNumber={idx + 1} />\n            ))}\n          </Document>\n        </div>\n      )}\n      {file && file.type === 'image/jpeg' && (\n        <img\n          src={URL.createObjectURL(file)}\n          alt=\"업로드된 이미지 미리보기\"\n          style={{ maxWidth: '100%', marginTop: 16, borderRadius: 8, boxShadow: '0 2px 8px #eee' }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default PdfUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}