{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atom2\\\\mathocr\\\\mathocr-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PdfUploader from './components/PdfUploader';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [ocrResult, setOcrResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [imageRotation, setImageRotation] = useState(0);\n\n  // 이미지 회전 핸들러\n  const handleImageRotate = () => {\n    setImageRotation(prev => (prev + 90) % 360);\n  };\n\n  // OCR 실행 함수\n  const handleOcr = async () => {\n    if (!uploadedFile) {\n      alert('먼저 파일을 업로드해주세요.');\n      return;\n    }\n    setIsLoading(true);\n    setOcrResult('');\n    try {\n      let imageUrl = '';\n      if (uploadedFile.type === 'image/jpeg') {\n        imageUrl = URL.createObjectURL(uploadedFile);\n      } else if (uploadedFile.type === 'application/pdf') {\n        alert('PDF의 경우, 현재는 JPG만 OCR이 지원됩니다.');\n        setIsLoading(false);\n        return;\n      }\n      // 회전된 이미지를 캔버스에 그려서 OCR\n      const img = new window.Image();\n      img.src = imageUrl;\n      await new Promise(resolve => {\n        img.onload = resolve;\n      });\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      if (imageRotation % 180 === 0) {\n        canvas.width = img.width;\n        canvas.height = img.height;\n      } else {\n        canvas.width = img.height;\n        canvas.height = img.width;\n      }\n      ctx.save();\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n      ctx.rotate(imageRotation * Math.PI / 180);\n      ctx.drawImage(img, -img.width / 2, -img.height / 2);\n      ctx.restore();\n      const rotatedUrl = canvas.toDataURL('image/jpeg');\n      const {\n        data: {\n          text\n        }\n      } = await Tesseract.recognize(rotatedUrl, 'kor+eng', {\n        logger: m => console.log(m)\n      });\n      setOcrResult(text);\n    } catch (error) {\n      setOcrResult('OCR 처리 중 오류가 발생했습니다.');\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #e3f2fd 0%, #fce4ec 100%)',\n      fontFamily: 'Pretendard, Noto Sans KR, sans-serif',\n      padding: 32\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 600,\n        margin: '0 auto',\n        background: '#fff',\n        borderRadius: 16,\n        boxShadow: '0 4px 24px #e3e3e3',\n        padding: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#1976d2',\n          marginBottom: 24\n        },\n        children: \"\\uC218\\uD559 \\uBB38\\uC81C \\uC790\\uB3D9 \\uCC44\\uC810 \\uC6F9\\uC571\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PdfUploader, {\n        onFileSelect: setUploadedFile,\n        onImageRotate: handleImageRotate,\n        imageRotation: imageRotation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOcr,\n        style: {\n          background: '#1976d2',\n          color: '#fff',\n          border: 'none',\n          borderRadius: 8,\n          padding: '12px 24px',\n          fontSize: 16,\n          cursor: 'pointer',\n          marginTop: 16\n        },\n        disabled: isLoading || !uploadedFile,\n        children: isLoading ? '인식 중...' : '손글씨/숫자 인식(OCR) 시작'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), ocrResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#388e3c'\n          },\n          children: \"\\uC778\\uC2DD \\uACB0\\uACFC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            background: '#f5f5f5',\n            padding: 16,\n            borderRadius: 8,\n            whiteSpace: 'pre-wrap',\n            fontSize: 16\n          },\n          children: ocrResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        textAlign: 'center',\n        marginTop: 48,\n        color: '#888'\n      },\n      children: [\"\\xA9 \", new Date().getFullYear(), \" MathOCR. Powered by React & Tesseract.js\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iXb7HfvJJN4YeIpOKI5PIB1ifbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PdfUploader","Tesseract","jsxDEV","_jsxDEV","App","_s","uploadedFile","setUploadedFile","ocrResult","setOcrResult","isLoading","setIsLoading","imageRotation","setImageRotation","handleImageRotate","prev","handleOcr","alert","imageUrl","type","URL","createObjectURL","img","window","Image","src","Promise","resolve","onload","canvas","document","createElement","ctx","getContext","width","height","save","translate","rotate","Math","PI","drawImage","restore","rotatedUrl","toDataURL","data","text","recognize","logger","m","console","log","error","style","minHeight","background","fontFamily","padding","children","maxWidth","margin","borderRadius","boxShadow","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","onImageRotate","onClick","border","fontSize","cursor","marginTop","disabled","whiteSpace","textAlign","Date","getFullYear","_c","$RefreshReg$"],"sources":["C:/Users/atom2/mathocr/mathocr-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PdfUploader from './components/PdfUploader';\nimport Tesseract from 'tesseract.js';\n\nfunction App() {\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [ocrResult, setOcrResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [imageRotation, setImageRotation] = useState(0);\n\n  // 이미지 회전 핸들러\n  const handleImageRotate = () => {\n    setImageRotation((prev) => (prev + 90) % 360);\n  };\n\n  // OCR 실행 함수\n  const handleOcr = async () => {\n    if (!uploadedFile) {\n      alert('먼저 파일을 업로드해주세요.');\n      return;\n    }\n    setIsLoading(true);\n    setOcrResult('');\n    try {\n      let imageUrl = '';\n      if (uploadedFile.type === 'image/jpeg') {\n        imageUrl = URL.createObjectURL(uploadedFile);\n      } else if (uploadedFile.type === 'application/pdf') {\n        alert('PDF의 경우, 현재는 JPG만 OCR이 지원됩니다.');\n        setIsLoading(false);\n        return;\n      }\n      // 회전된 이미지를 캔버스에 그려서 OCR\n      const img = new window.Image();\n      img.src = imageUrl;\n      await new Promise((resolve) => { img.onload = resolve; });\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      if (imageRotation % 180 === 0) {\n        canvas.width = img.width;\n        canvas.height = img.height;\n      } else {\n        canvas.width = img.height;\n        canvas.height = img.width;\n      }\n      ctx.save();\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n      ctx.rotate((imageRotation * Math.PI) / 180);\n      ctx.drawImage(img, -img.width / 2, -img.height / 2);\n      ctx.restore();\n      const rotatedUrl = canvas.toDataURL('image/jpeg');\n\n      const { data: { text } } = await Tesseract.recognize(\n        rotatedUrl,\n        'kor+eng',\n        { logger: m => console.log(m) }\n      );\n      setOcrResult(text);\n    } catch (error) {\n      setOcrResult('OCR 처리 중 오류가 발생했습니다.');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #e3f2fd 0%, #fce4ec 100%)',\n      fontFamily: 'Pretendard, Noto Sans KR, sans-serif',\n      padding: 32\n    }}>\n      <div style={{\n        maxWidth: 600,\n        margin: '0 auto',\n        background: '#fff',\n        borderRadius: 16,\n        boxShadow: '0 4px 24px #e3e3e3',\n        padding: 32\n      }}>\n        <h1 style={{ color: '#1976d2', marginBottom: 24 }}>수학 문제 자동 채점 웹앱</h1>\n        <PdfUploader\n          onFileSelect={setUploadedFile}\n          onImageRotate={handleImageRotate}\n          imageRotation={imageRotation}\n        />\n        <button\n          onClick={handleOcr}\n          style={{\n            background: '#1976d2', color: '#fff', border: 'none', borderRadius: 8,\n            padding: '12px 24px', fontSize: 16, cursor: 'pointer', marginTop: 16\n          }}\n          disabled={isLoading || !uploadedFile}\n        >\n          {isLoading ? '인식 중...' : '손글씨/숫자 인식(OCR) 시작'}\n        </button>\n        {ocrResult && (\n          <div style={{ marginTop: 32 }}>\n            <h3 style={{ color: '#388e3c' }}>인식 결과</h3>\n            <pre style={{\n              background: '#f5f5f5', padding: 16, borderRadius: 8,\n              whiteSpace: 'pre-wrap', fontSize: 16\n            }}>{ocrResult}</pre>\n          </div>\n        )}\n      </div>\n      <footer style={{ textAlign: 'center', marginTop: 48, color: '#888' }}>\n        © {new Date().getFullYear()} MathOCR. Powered by React & Tesseract.js\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}